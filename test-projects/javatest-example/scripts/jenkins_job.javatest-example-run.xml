<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.3">
      <projectUrl>https://github.com/xyteam/AutoBDD.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>ParallelThread</name>
          <description>number of parallel-threads to run</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>1</string>
              <string>2</string>
              <string>3</string>
              <string>4</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Movie</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>0</string>
              <string>1</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Platform</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Linux</string>
              <string>Win10</string>
              <string>Win7</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Browser</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>CH</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Project</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>javatest-example</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition plugin="extended-choice-parameter@0.76">
          <name>ModuleList_comma</name>
          <description></description>
          <quoteValue>false</quoteValue>
          <saveJSONParameterToFile>false</saveJSONParameterToFile>
          <visibleItemCount>1</visibleItemCount>
          <type>PT_MULTI_SELECT</type>
          <value>ui</value>
          <defaultValue>ui</defaultValue>
          <multiSelectDelimiter>,</multiSelectDelimiter>
          <projectName>javatest-example-run</projectName>
        </com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/xyteam/AutoBDD.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <assignedNode>AutoBDD</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# establish start_timestamp
cd ${WORKSPACE}
START_TIMESTAMP=$(date +%Y%m%d_%H%M%S%Z)
echo START_TIMESTAMP=${START_TIMESTAMP} &gt; ${WORKSPACE}/build.properties
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# Run test with docker container
cd ${WORKSPACE}
source ${WORKSPACE}/build.properties
CONTAINER_NAME=$(basename ${JOB_NAME})-run-test
ModuleList_space=$(echo ${ModuleList_comma} | tr &apos;,&apos; &apos; &apos;)
  
ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/platform_id_rsa -t -t localhost \
  &quot;sudo docker run -d --rm=false \
  --user=u$(id -u) --privileged \
  --name ${CONTAINER_NAME} \
  -v ${WORKSPACE}:/home/u$(id -u)/ \
  -v /home/vagrant/.bashrc:/home/u$(id -u)/.bashrc \
  -v /home/vagrant/.pki:/home/u$(id -u)/.pki \
  -v /home/vagrant/.nvm:/home/u$(id -u)/.nvm \
  -v /home/vagrant/.m2:/home/u$(id -u)/.m2 \
  --net=host \
  --shm-size $(expr ${ParallelThread} \* 128)M \
  xyplatform:lubuntu1804 \
  /bin/bash -c &apos;cd; . .bashrc; . .nvm/nvm.sh; . .nvm/bash_completion; nvm use v8; \
  npm install; \
  . .autoPathrc.sh; \
  ./framework/scripts/java_autorun.py --parallel ${ParallelThread} --runonly true \
  --timestamp ${START_TIMESTAMP} --movie ${Movie} \
  --platform ${Platform} --browser ${Browser} \
  --project ${Project} --module ${ModuleList_space}&apos;&quot;

ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/platform_id_rsa -t -t localhost \
   &quot;sudo docker logs -f ${CONTAINER_NAME}&quot;
   
ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/platform_id_rsa -t -t localhost \
  &quot;sudo docker container wait ${CONTAINER_NAME}; \
   sudo docker rm ${CONTAINER_NAME};&quot;
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# Generate Report with docker container
cd ${WORKSPACE}
source ${WORKSPACE}/build.properties
CONTAINER_NAME=$(basename ${JOB_NAME})-gen-report
ModuleList_space=$(echo ${ModuleList_comma} | tr &apos;,&apos; &apos; &apos;)
  
ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/platform_id_rsa -t -t localhost \
  &quot;sudo docker run -d --rm=false \
  --user=u$(id -u) --privileged \
  --name ${CONTAINER_NAME} \
  -v ${WORKSPACE}:/home/u$(id -u)/ \
  -v /home/vagrant/.bashrc:/home/u$(id -u)/.bashrc \
  -v /home/vagrant/.pki:/home/u$(id -u)/.pki \
  -v /home/vagrant/.nvm:/home/u$(id -u)/.nvm \
  -v /home/vagrant/.m2:/home/u$(id -u)/.m2 \
  --net=host \
  --shm-size 128M \
  xyplatform:lubuntu1804 \
  /bin/bash -c &apos;cd; . .bashrc; . .nvm/nvm.sh; . .nvm/bash_completion; nvm use v8; . .autoPathrc.sh; \
  ./framework/scripts/java_autorun.py --parallel 1 --reportonly true \
  --timestamp ${START_TIMESTAMP} --movie ${Movie} \
  --platform ${Platform} --browser ${Browser} \
  --project ${Project} --module ${ModuleList_space}&apos;&quot;

ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/platform_id_rsa -t -t localhost \
   &quot;sudo docker logs -f ${CONTAINER_NAME}&quot;
   
ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/platform_id_rsa -t -t localhost \
  &quot;sudo docker container wait ${CONTAINER_NAME}; \
   sudo docker rm ${CONTAINER_NAME};&quot;
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.37">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>